@page "/createUser"
@inject NavigationManager NavigationManager
<h3>Create Account</h3>
<br />

<EditForm Model="newAcc" OnValidSubmit="SaveUser" autocomplete="off">
	@*	use the data validation defined in expense class*@
	<DataAnnotationsValidator></DataAnnotationsValidator>
	<ValidationSummary></ValidationSummary>


	<div class="form-group">
		<label for="name">Name</label>
		<InputText id="name"
				   @bind-Value=newAcc.Name
				   class="form-control">
		</InputText>
	</div>

	<div class="form-group">
		<label for="cost">Password</label>
		<InputText id="password"
				   @bind-Value=newAcc.Password
				   class="form-control">
		</InputText>
	</div>

	<div class="form-group">
		<label for="cost">Repeat password</label>
		<InputText id="comparison"
				   @bind-Value=newAcc.ConfirmPassword
				   class="form-control">
		</InputText>
	</div>

	<br />
	<br />
	<button type="submit"
			class="btn btn-primary">
		Save
	</button>




</EditForm>

@code {
	ExpenseAccount account = new ExpenseAccount();
	AccountCreation newAcc = new AccountCreation();

	ExpenseContext context = new ExpenseContext();

	private bool nameIsTaken = false;
	private string toBeEncrypted = string.Empty;
	private string comparisonString = string.Empty;

	private void SaveUser()
	{
		newAcc.Salt = Budgeteer.Plugins.Encryption.EncryptionHandler.GetRandomSalt();

		var existingUserCount = context.Users.Count(x => x.UserName == newAcc.Name);

		if (existingUserCount == 0)
		{
			User user = new User()
				{
					UserName = newAcc.Name,
					HashedPassword = Budgeteer.Plugins.Encryption.EncryptionHandler.HashPassword(newAcc.Password, newAcc.Salt)
				};

			context.Add(user);

			context.Add(new UserSalt() { Salt = newAcc.Salt, User = user });
			context.SaveChanges();

		}
		else
		{
			newAcc.Name = string.Empty;
		}

		//User user = new User()
		//	{
		//		UserName = newAcc.Name,
		//		HashedPassword = Budgeteer.Plugins.Encryption.EncryptionHandler.HashPassword(newAcc.Password, newAcc.Salt)
		//	};

		//foreach (var item in context.Users)
		//{
		//	if (item.UserName == newAcc.Name)
		//	{
		//		newAcc.CompareName = string.Empty;
		//		//newAcc.Name = string.Empty;
		//		nameIsTaken = true;
		//	}
		//}

		//if (!nameIsTaken)
		//{
		//	context.Add(user);

		//	context.Add(new UserSalt() { Salt = newAcc.Salt, User = user });
		//	context.SaveChanges();
		//}
		//else
		//{
		//	newAcc.Name = string.Empty;
		//	nameIsTaken = false;
		//	//EC.Validate();
		//}




		//else
		//{

		//	newAcc.Name = string.Empty;
		//	//User user = new User()
		//	//	{
		//	//		UserName = newAcc.Name,
		//	//		HashedPassword = Budgeteer.Plugins.Encryption.EncryptionHandler.HashPassword(newAcc.Password, newAcc.Salt)
		//	//	};
		//	//context.Add(user);

		//	//context.Add(new UserSalt() { Salt = newAcc.Salt, User = user });

		//	//context.SaveChanges();
		//}


	}

	private void ResetCharacterComparison()
	{
		newAcc.CompareName = string.Empty;
		//EC.Validate();
	}
}
