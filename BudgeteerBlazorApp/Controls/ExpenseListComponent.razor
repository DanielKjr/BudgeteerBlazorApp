@inject IViewExpensesByName ViewExpensesByName
@inject AuthenticationStateProvider authenticationStateProvider
@inject IViewExpensesByUserReference ViewExpensesByUserReference
@inject UserService userService


<table class="table">
	<thead>
		<tr>
			<th>Name</th>
			<th>Cost</th>
			<th>Interval</th>
			<th></th>
		</tr>
	</thead>
	<tbody>

		<ExpenseListItemComponent Expenses="listExpenses"></ExpenseListItemComponent>

	</tbody>
</table>



@code {
	[CascadingParameter]
	private Task<AuthenticationState>? authenticationState { get; set; }

	private List<Expense> listExpenses = new List<Expense>();

	[Parameter]
	public string SearchTerm { get; set; } = string.Empty;

	protected override async Task OnParametersSetAsync()
	{
		listExpenses = (await ViewExpensesByName.ExecuteAsync(this.SearchTerm)).ToList();
	}

	protected override async Task OnInitializedAsync()
	{
		var customAuthenticationStateProvider = (CustomAuthenticationStateProvider)authenticationStateProvider;
		await customAuthenticationStateProvider.GetAuthenticationStateAsync();
	

		await ViewExpensesByUserReference.ExecuteAsync(userService.GetByUserName(authenticationState.Result.User.Identity.Name));
	}

	
}
